architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    runs {
        client {
            property "mixin.debug.export", "true"
            property "mixin.hotSwap", "true"
        }
    }
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modLocalRuntime "maven.modrinth:lazydfu:0.1.3"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
}

processResources {
    inputs.property "version", rootProject.mod_version

    filesMatching("fabric.mod.json") {
        expand "version": rootProject.mod_version
    }
}

String fileName = "${archives_base_name}-mc${supported_version}"

shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev"
    archiveVersion = "v${mod_version}"
    archiveBaseName = fileName
}

remapJar {
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = "fabric"
    archiveVersion = "v${mod_version}"
    archiveBaseName = fileName
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

afterEvaluate {
    loom {
        runs {
            configureEach {
                def mixinJarFile = configurations.compileClasspath.files { it.group == "net.fabricmc" && it.name == "sponge-mixin" }.first()
                vmArg("-javaagent:$mixinJarFile")
            }
        }
    }
}

def uploadDebug = true

curseforge {
    apiKey = project.hasProperty("curseforge_api_token") ? project.curseforge_api_token : ""
    project {
        id = "907390"
        changelog = rootProject.file("CHANGE_LOG.md")
        changelogType = "markdown"
        releaseType = "release"
        addGameVersion "Fabric"
        addGameVersion "Quilt"
        addGameVersion "Java 17"
        addGameVersion "1.19.2"
        addGameVersion "1.19.3"
        addGameVersion "1.19.4"
        addGameVersion "1.20.1"
        addGameVersion "1.20.2"

        mainArtifact(remapJar.archiveFile) {
            it.displayName = "[Fabric ${supported_version}] SquidNoGlitch v${mod_version}"
        }
        afterEvaluate {
            uploadTask.dependsOn(remapJar)
        }
    }
    options {
        debug uploadDebug
        forgeGradleIntegration = false
    }
}

modrinth {
    debugMode = uploadDebug
    token = project.hasProperty("modrinth_api_token") ? project.modrinth_api_token : ""
    projectId = "squid-no-glitch"
    changelog = rootProject.file("CHANGE_LOG.md").text
    syncBodyFrom = rootProject.file("README.md").text
    versionName = "[Fabric ${supported_version}] SquidNoGlitch v${mod_version}"
    versionNumber = project.mod_version + "-fabric"
    versionType = "release"
    uploadFile = remapJar
    gameVersions = ["1.19.2", "1.19.3", "1.19.4", "1.20.1", "1.20.2"]
    loaders = ["fabric", "quilt"]
}